<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>悲怆终曲</title>
  
  <subtitle>SakuraiLH 的博客</subtitle>
  <link href="http://sakurailh.github.io/atom.xml" rel="self"/>
  
  <link href="http://sakurailh.github.io/"/>
  <updated>2022-11-04T00:49:33.899Z</updated>
  <id>http://sakurailh.github.io/</id>
  
  <author>
    <name>SakuraiLH</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>01 如何成为一名合格的 BuildBot</title>
    <link href="http://sakurailh.github.io/2022/11/04/01-%E5%A6%82%E4%BD%95%E6%88%90%E4%B8%BA%E4%B8%80%E5%90%8D%E5%90%88%E6%A0%BC%E7%9A%84BuildBot/"/>
    <id>http://sakurailh.github.io/2022/11/04/01-%E5%A6%82%E4%BD%95%E6%88%90%E4%B8%BA%E4%B8%80%E5%90%8D%E5%90%88%E6%A0%BC%E7%9A%84BuildBot/</id>
    <published>2022-11-03T23:24:43.000Z</published>
    <updated>2022-11-04T00:49:33.899Z</updated>
    
    <content type="html"><![CDATA[<h2 id="小课堂-如何成为一名合格的-Buildbot"><a href="#小课堂-如何成为一名合格的-Buildbot" class="headerlink" title="小课堂 - 如何成为一名合格的 Buildbot?"></a>小课堂 - 如何成为一名合格的 Buildbot?</h2><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p><em>草, 真的没有想到自己的第一篇文章居然写的是这个(逃)</em></p><p>前年在 Coolapk 发表过一篇类似的文章, 但是因为 Coolapk 并没有 Markdown 的支持, 所以原文章显得非常杂乱 ()</p><p>故此写一篇新的来弥补一下这个缺陷 ()</p><p>这篇文章是针对现有设备树的机器而写的, 如果您的机器仍然没有设备树可用, 可以参考我接下来的文章()</p><h3 id="0x00-声明"><a href="#0x00-声明" class="headerlink" title="0x00 声明"></a>0x00 声明</h3><div class="danger">本文作者对您看了这篇文章造成的后果不负一切责任!<br>请不要把看了这篇文章跑出来的包放到 XDA / Coolapk 以及其他平台上, 谢谢合作。</div><h3 id="0x01-准备机器"><a href="#0x01-准备机器" class="headerlink" title="0x01 准备机器"></a>0x01 准备机器</h3><p>首先, 让我们来看看安卓官方对安卓编译机器的最低要求:</p><p><a href="https://imgse.com/i/xqI2Ed"><img src="https://s1.ax1x.com/2022/11/04/xqI2Ed.png" alt="如图"></a></p><p>您至少需要:</p><ul><li>64 位的计算机</li><li>250 GB 的同步硬盘空间 + 150 GB 的编译硬盘空间</li><li>最少需要 16 GB 的内存, 但谷歌官方推荐 64 GB 的内存</li></ul><p>如果您的本地机器达到了最低编译标准, 请看 0x02。</p><p>如果本地机器达不到怎么办? 选购 <strong>VPS</strong> 啊!</p><p>对于 <strong>VPS</strong> 的提供商有很多家, 这里就不一一列举了。我主要推荐的有这几家:</p><ul><li><a href="https://azure.microsoft.com/">Azure</a></li><li><a href="https://cloud.google.com/gcp">GCP</a> (Google Cloud Platform)</li><li><a href="https://aws.amazon.com/">AWS</a></li><li><a href="https://www.vultr.com/">Vultr</a></li></ul><p>至于选哪一家在这里就不详述了, 可以参考下网上的对比。</p><p>在根据上面的最低编译配置选出来机器之后 (系统记得选 Ubuntu 20.04 +)，开机，启动，即可以进行到我们的下一个环节了。</p><h3 id="0x02-准备环境"><a href="#0x02-准备环境" class="headerlink" title="0x02 准备环境"></a>0x02 准备环境</h3><p>安卓编译, 推荐使用 Ubuntu 20.04 及以上。</p><p>对于其他发行版, 可以去 Github 上找环境的一键配置脚本。</p><p>进入系统之后, 打开终端, 使用以下指令更新依赖:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update &amp;&amp; sudo apt install bc bison build-essential ccache curl flex g++-multilib gcc-multilib git gnupg gperf imagemagick lib32ncurses5-dev lib32readline-dev lib32z1-dev libelf-dev liblz4-tool libncurses5 libncurses5-dev libsdl1.2-dev libssl-dev libxml2 libxml2-utils lzop pngcrush rsync schedtool squashfs-tools xsltproc zip zlib1g-dev python3 python2</span><br></pre></td></tr></table></figure><p>接下来, 使用以下指令安装 <em>repo</em> :</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p ~/bin</span><br><span class="line">curl https://storage.googleapis.com/git-repo-downloads/repo &gt; ~/bin/repo</span><br><span class="line"><span class="built_in">chmod</span> a+x ~/bin/repo</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;if [ -d &quot;$HOME/bin&quot; ] ; then</span></span><br><span class="line"><span class="string">    PATH=&quot;$HOME/bin:$PATH&quot;</span></span><br><span class="line"><span class="string">fi&#x27;</span> &gt;&gt; ~/.profile</span><br></pre></td></tr></table></figure><p>要使用 <em>repo</em> 命令同步源码, 你需要设置自己的 <em>git</em> 身份。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.email <span class="string">&quot;xxxxxx@xx.com&quot;</span></span><br><span class="line">git config --global user.name <span class="string">&quot;xxxxxx&quot;</span></span><br></pre></td></tr></table></figure><div class="danger">这里的 email 和 name 最好是你的 Github 帐号对应的 name 和 email, 不过如果您不打算提交自己的本地更改的话, 瞎填或者填自己的任意邮箱和用户名都无所谓。</div><h3 id="0x03-拉取源码"><a href="#0x03-拉取源码" class="headerlink" title="0x03 拉取源码"></a>0x03 拉取源码</h3><p>接下来就到了快乐的同步时间了!</p><p>如果您是国内环境的话, 推荐使用镜像站: <a href="https://mirrors.bfsu.edu.cn/help/AOSP/">BFSU</a></p><p>找到您想要编译的 ROM 的 manifest 仓库, 举个例子, 这是 Lineage 的:</p><p><a href="https://imgse.com/i/xqI5gf"><img src="https://s1.ax1x.com/2022/11/04/xqI5gf.png" alt="manifest仓库"></a></p><p>那么我们看到了下面的提示, 我们这个时候在家目录新建一个文件夹:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p ~/android</span><br><span class="line"><span class="built_in">cd</span> ~/android</span><br></pre></td></tr></table></figure><p>然后根据提示初始化 <em>repo</em> :</p><p>(后面的 –depth&#x3D;1 表示仓库拉取深度为 1, 节省空间, 可选)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">repo init -u https://github.com/LineageOS/android.git -b lineage-19.1</span><br></pre></td></tr></table></figure><p>下面正式拉取仓库:</p><p>(后面的参数都是可选的, 直接用 <code>repo sync</code> 也可以)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">repo <span class="built_in">sync</span> --fail-fast --force-sync -j$(<span class="built_in">nproc</span> --all) --prune -c --no-tags --no-clone-bundle</span><br></pre></td></tr></table></figure><p>下面喝一杯咖啡, 源码马上拉好…</p><h3 id="0x04-ify-设备树"><a href="#0x04-ify-设备树" class="headerlink" title="0x04 ify 设备树"></a>0x04 ify 设备树</h3><p>首先, 我们来熟悉一下 Android 源码的目录。</p><p>device 文件夹是存放设备树的地方, 设备树是安卓设备的索引。</p><p>为了让 Android 的编译系统认识你的设备树, 我们需要这样放置它:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~/android/device/厂商名/设备代号</span><br></pre></td></tr></table></figure><p>如何找到它呢? 好问题。</p><p>您可以在 Github 上搜索 <code>device_厂商名_设备代号</code> 来找到适合自己设备的设备树。</p><div class="danger">发现了吗? '_' 代表的是目录结构!</div><p>举个例子: 我现在要编译 小米 6 的 LineageOS。</p><p>那么我需要搜索: <code>device_xiaomi_sagit</code>。</p><p><a href="https://imgse.com/i/xqILUs"><img src="https://s1.ax1x.com/2022/11/04/xqILUs.png" alt="搜索结果"></a></p><p>那么就选第一个准没有错了。</p><p>输入以下指令拉取设备树:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/***/*** device/***/***</span><br></pre></td></tr></table></figure><p>vendor 文件夹是存放厂商私有文件的地方。</p><p>通常情况下, 你可以在 <a href="https://github.com/TheMuppets">TheMuppets</a> 找到自己设备厂商的所有私有文件, 仓库名称通常是这样的:<code> proprietary_vendor_*****</code></p><p>我们按照设备树的方法拉取它 (加上 –depth &#x3D; 1 节省空间):</p><p><code>git clone https://github.com/TheMuppets/proprietary_vendor_***** vendor/***** --depth=1</code></p><p>kernel 文件夹是存放设备内核的地方。</p><p>按照设备树的方式, 在 Github 上搜寻对应你设备的内核，如 <code>kernel_xiaomi_*****</code>。</p><p>请注意，大部分厂商喜欢把末尾的设备名改为芯片组名称来发布公开内核, 所以即使我们刚才搜索的是 <code>device_essential_mata</code>， 现在也应该搜索: <code>kernel_essential_msm8998</code> ( mata 是安爹 )</p><p>现在拉取它 ( –depth&#x3D;1 节省空间 ):</p><p><code>git clone https://github.com/*****/kernel_essential_msm8998 kernel/essential/msm8998 --depth=1</code></p><p>拉取完成, 下面进入 ify 阶段。</p><p>首先, 看看你要跑的 ROM 的前缀。</p><p>比如说, 我现在要跑 <a href="https://github.com/Lineage">LineageOS</a>, 我就应该使用指令:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/android/</span><br><span class="line"><span class="built_in">ls</span> vendor</span><br></pre></td></tr></table></figure><p>我们会发现输出了这些东西:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">11:45:14 sakurailh@AsukaTwilight $ android -&gt; <span class="built_in">ls</span> vendor</span><br><span class="line">codeaurora lineage qcomxiaomi</span><br></pre></td></tr></table></figure><p>记得我们要跑的是什么吗? LineageOS! 那么我们在 <code>vendor/</code> 下看见了 <em>lineage</em> 这个文件夹, 那么 <em>lineage</em> 就是我们的目标前缀了。</p><p>进入到设备树目录 (继续拿 sagit 举例子):</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> device/xiaomi/sagit</span><br></pre></td></tr></table></figure><p>我们会发现一大堆文件, 不用管，先来个 <code>ls</code>命令看看。</p><p>我们发现了这些重要文件 <em><strong>敲黑板</strong></em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AndroidProducts.mk****_sagit.mk</span><br></pre></td></tr></table></figure><p>****就是这个设备树前主人适配的 ROM, 我们把它改成我们的 (把****) 换成前缀代号:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mv</span> ****_sagit.mk lineage_sagit.mk</span><br></pre></td></tr></table></figure><p>之后用你能想到的各种编辑器打开 <em>lineage_sagit.mk</em>。</p><p>我们会看到类似这样的文件:</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Copyright (C) 2017-2018 The **** Project</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span></span><br><span class="line"><span class="comment"># you may not use this file except in compliance with the License.</span></span><br><span class="line"><span class="comment"># You may obtain a copy of the License at</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#      http://www.apache.org/licenses/LICENSE-2.0</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Unless required by applicable law or agreed to in writing, software</span></span><br><span class="line"><span class="comment"># distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span></span><br><span class="line"><span class="comment"># WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></span><br><span class="line"><span class="comment"># See the License for the specific language governing permissions and</span></span><br><span class="line"><span class="comment"># limitations under the License.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Inherit from those products. Most specific first.</span></span><br><span class="line"><span class="variable">$(<span class="built_in">call</span> inherit-product, <span class="variable">$(SRC_TARGET_DIR)</span>/product/core_64_bit.mk)</span></span><br><span class="line"><span class="variable">$(<span class="built_in">call</span> inherit-product, <span class="variable">$(SRC_TARGET_DIR)</span>/product/full_base_telephony.mk)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Inherit from sagit device</span></span><br><span class="line"><span class="variable">$(<span class="built_in">call</span> inherit-product, device/xiaomi/sagit/device.mk)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Inherit some common **** stuff.</span></span><br><span class="line"><span class="variable">$(<span class="built_in">call</span> inherit-product, vendor/****/config/common_full_phone.mk)</span></span><br><span class="line"></span><br><span class="line">PRODUCT_NAME := ****_sagit</span><br><span class="line">PRODUCT_DEVICE := sagit</span><br><span class="line">PRODUCT_BRAND := Xiaomi</span><br><span class="line">PRODUCT_MODEL := MI 6</span><br><span class="line">PRODUCT_MANUFACTURER := Xiaomi</span><br><span class="line"></span><br><span class="line">PRODUCT_GMS_CLIENTID_BASE := android-xiaomi</span><br><span class="line"></span><br><span class="line">PRODUCT_BUILD_PROP_OVERRIDES += \</span><br><span class="line">    PRIVATE_BUILD_DESC=<span class="string">&quot;sagit-user 8.0.0 OPR1.170623.027 V9.2.3.0.OCAMIEK release-keys&quot;</span></span><br><span class="line"></span><br><span class="line">BUILD_FINGERPRINT := Xiaomi/sagit/sagit:8.0.0/OPR1.170623.027/V9.2.3.0.OCAMIEK:user/release-keys</span><br></pre></td></tr></table></figure><p>我们要改的东西有这些:</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Inherit some common **** stuff.</span></span><br><span class="line"><span class="variable">$(<span class="built_in">call</span> inherit-product, vendor/****/config/common_full_phone.mk)</span></span><br></pre></td></tr></table></figure><p>看到那个 <code>vendor/****/config</code>了吗? 改成 <code>vendor/lineage/config</code>。</p><p>后面的 <code>common_full_phone.mk</code> 代表着 ROM 的通用配置文件。</p><p>这里各个 ROM 都不太一样，你可以使用指令来查看你要编译的 ROM 的配置文件到底是哪个:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ls</span> ~/android/vendor/lineage/config/</span><br></pre></td></tr></table></figure><p>在输出的文件列表里面, 如果有 <code>common_full_phone.mk</code> 那么我们就保持原文中的<code>common_full_phone</code>不动。</p><p>如果只有<code>common.mk</code>, 那么我们就把原文改成<code>common.mk</code>。</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Inherit some common **** stuff.</span></span><br><span class="line"><span class="variable">$(<span class="built_in">call</span> inherit-product, vendor/lineage/config/common_.mk)</span></span><br></pre></td></tr></table></figure><p>对于<code>PRODUCT_NAME</code>，我们直接把它的前缀改成我们要跑的 ROM 的前缀, 像这样:</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PRODUCT_NAME := lineage_sagit</span><br></pre></td></tr></table></figure><p>下面我们可以关闭 <code>lineage_sagit.mk</code>, 移步到 <code>AndroidProducts.mk</code>:</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Copyright (C) 1919-810 The **** Project</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span></span><br><span class="line"><span class="comment"># you may not use this file except in compliance with the License.</span></span><br><span class="line"><span class="comment"># You may obtain a copy of the License at</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#      http://www.apache.org/licenses/LICENSE-2.0</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Unless required by applicable law or agreed to in writing, software</span></span><br><span class="line"><span class="comment"># distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span></span><br><span class="line"><span class="comment"># WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></span><br><span class="line"><span class="comment"># See the License for the specific language governing permissions and</span></span><br><span class="line"><span class="comment"># limitations under the License.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"></span><br><span class="line">PRODUCT_MAKEFILES := \</span><br><span class="line">    <span class="variable">$(LOCAL_DIR)</span>/****_sagit.mk</span><br><span class="line"></span><br><span class="line">COMMON_LUNCH_CHOICES := \</span><br><span class="line">    ****_sagit-user \</span><br><span class="line">    ****_sagit-userdebug \</span><br><span class="line">    ****_sagit-eng</span><br></pre></td></tr></table></figure><p>看到所有的****了吗, 我们全部把它改成 lineage, 像这样:</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Copyright (C) 2017-2018 The LineageOS Project</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span></span><br><span class="line"><span class="comment"># you may not use this file except in compliance with the License.</span></span><br><span class="line"><span class="comment"># You may obtain a copy of the License at</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#      http://www.apache.org/licenses/LICENSE-2.0</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Unless required by applicable law or agreed to in writing, software</span></span><br><span class="line"><span class="comment"># distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span></span><br><span class="line"><span class="comment"># WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></span><br><span class="line"><span class="comment"># See the License for the specific language governing permissions and</span></span><br><span class="line"><span class="comment"># limitations under the License.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"></span><br><span class="line">PRODUCT_MAKEFILES := \</span><br><span class="line">    <span class="variable">$(LOCAL_DIR)</span>/lineage_sagit.mk</span><br><span class="line"></span><br><span class="line">COMMON_LUNCH_CHOICES := \</span><br><span class="line">    lineage_sagit-user \</span><br><span class="line">    lineage_sagit-userdebug \</span><br><span class="line">    lineage_sagit-eng</span><br></pre></td></tr></table></figure><p>大功告成!</p><h3 id="0x05-准备编译"><a href="#0x05-准备编译" class="headerlink" title="0x05 准备编译"></a>0x05 准备编译</h3><p>回到 Android 源码的根目录:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/android</span><br></pre></td></tr></table></figure><p>配置安卓编译系统:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">. build/envsetup.sh</span><br></pre></td></tr></table></figure><p>用 lunch 初始化你的设备:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lunch lineage_设备代号-userdebug</span><br></pre></td></tr></table></figure><h3 id="0x06-编译"><a href="#0x06-编译" class="headerlink" title="0x06 编译!"></a>0x06 编译!</h3><p>如果前面都没有错误的话, 按照你要跑的 ROM 给你的提示, (在 manifest 里面), 输入:</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mka bacon</span><br></pre></td></tr></table></figure><p>芜湖!</p><p>下面睡个觉，等待它跑完……</p><h3 id="0x07-刷入"><a href="#0x07-刷入" class="headerlink" title="0x07 刷入"></a>0x07 刷入</h3><p>如果显示<code>Build successful</code>, 那么恭喜你, 你人生中的第一个包跑好了。</p><p>现在进入到输出目录:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd ~/android/out/target/product/设备代号/</span><br></pre></td></tr></table></figure><p>看看里面都有什么东西…. :</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls</span><br></pre></td></tr></table></figure><p>如果看到了类似 <code>LineageOS-20.0_设备代号-日期.zip</code> 这样的压缩包, 那么这就是你的 ROM 包了。</p><p>使用 <em>ftp&#x2F;scp&#x2F;gcloud</em> 各种手段把它下载下来之后, 刷入….启动!</p><h3 id="0x08-成功了"><a href="#0x08-成功了" class="headerlink" title="0x08 成功了?"></a>0x08 成功了?</h3><p>是的, 你跑好了人生中的第一个包, 你现在已经启动了它, 兴奋的在主屏幕上划来划去!</p><p>下面该做什么呢?</p><ul><li>查看所有功能是否可用</li><li>查看是否有任何的 BUG</li></ul><p>如果有了该怎么办?</p><p>好问题, 但是修 BUG 不是我们这篇文章的重点, 后面会陆陆续续的发布一些维护小技巧, 欢迎关注。</p><p>如果遇到任何问题可以考虑联系我:</p><p>邮箱: mailto:<a href="mailto:&#x68;&#x69;&#107;&#97;&#x72;&#105;&#x6c;&#104;&#64;&#102;&#x6f;&#120;&#109;&#x61;&#105;&#x6c;&#46;&#99;&#x6f;&#x6d;">&#x68;&#x69;&#107;&#97;&#x72;&#105;&#x6c;&#104;&#64;&#102;&#x6f;&#120;&#109;&#x61;&#105;&#x6c;&#46;&#99;&#x6f;&#x6d;</a></p><p>Telegram: <a href="https://t.me/FracturizedUtopia">@FracturizedUtopia</a> 欢迎私聊骚扰</p><p>QQ: 1447427246</p><p>最后祝顺利!</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;小课堂-如何成为一名合格的-Buildbot&quot;&gt;&lt;a href=&quot;#小课堂-如何成为一名合格的-Buildbot&quot; class=&quot;headerlink&quot; title=&quot;小课堂 - 如何成为一名合格的 Buildbot?&quot;&gt;&lt;/a&gt;小课堂 - 如何成为一名合格的 B</summary>
      
    
    
    
    
    <category term="Android" scheme="http://sakurailh.github.io/tags/Android/"/>
    
  </entry>
  
</feed>
